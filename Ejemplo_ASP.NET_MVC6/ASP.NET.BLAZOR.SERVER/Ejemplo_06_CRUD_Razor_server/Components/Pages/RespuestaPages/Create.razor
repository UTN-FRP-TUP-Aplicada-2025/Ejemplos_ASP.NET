@page "/respuesta/create"
@using Microsoft.EntityFrameworkCore
@using Ejemplo_06_CRUD_Razor_server.Models
@inject IDbContextFactory<Ejemplo_06_CRUD_Razor_server.common.AppDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Respuesta</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Respuesta" OnValidSubmit="AddRespuesta" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="email" class="form-label">Email:</label> 
                <InputText id="email" @bind-Value="Respuesta.Email" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Respuesta.Email" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="camina" class="form-label">Camina:</label> 
                <InputCheckbox id="camina" @bind-Value="Respuesta.Camina" class="form-check-input" /> 
                <ValidationMessage For="() => Respuesta.Camina" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="usatransportepublico" class="form-label">UsaTransportePublico:</label> 
                <InputCheckbox id="usatransportepublico" @bind-Value="Respuesta.UsaTransportePublico" class="form-check-input" /> 
                <ValidationMessage For="() => Respuesta.UsaTransportePublico" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="usatransporteprivado" class="form-label">UsaTransportePrivado:</label> 
                <InputCheckbox id="usatransporteprivado" @bind-Value="Respuesta.UsaTransportePrivado" class="form-check-input" /> 
                <ValidationMessage For="() => Respuesta.UsaTransportePrivado" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="distanciaasudestino" class="form-label">DistanciaASuDestino:</label> 
                <InputNumber id="distanciaasudestino" @bind-Value="Respuesta.DistanciaASuDestino" class="form-control" /> 
                <ValidationMessage For="() => Respuesta.DistanciaASuDestino" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/respuesta">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Respuesta Respuesta { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddRespuesta()
    {
        using var context = DbFactory.CreateDbContext();
        context.Respuestas.Add(Respuesta);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/respuesta");
    }
}
