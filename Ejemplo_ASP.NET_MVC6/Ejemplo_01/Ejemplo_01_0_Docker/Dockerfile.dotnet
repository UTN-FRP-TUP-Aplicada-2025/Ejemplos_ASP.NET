# etapa: construcciï¿½n
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build


USER root
RUN apt-get update 
RUN apt-get install -y gss-ntlmssp krb5-user libkrb5-dev openssl libssl-dev libgssapi-krb5-2 libkrb5-3
RUN apt-get install -y iputils-ping
RUN rm -rf /var/lib/apt/lists/*


ARG EJEMPLO="Ejemplo_01"
ARG PROJECT_NAME="Ejemplo_01_CRUD_MVC_Simple"
ARG PROJECT_PATH=$PROJECT_NAME
ARG PROJECT_FILE=$EJEMPLO "/Ejemplo_01_CRUD_MVC_Simple.csproj"
ARG BUILD_ROOT="/src/app_dotnet"
ARG NOMBRE_DLL=$PROJECT_NAME ".DLL"


WORKDIR $BUILD_ROOT

# copiando archivos desde la carpeta actual
COPY ${PROJECT_PATH}/. ${BUILD_ROOT}


RUN dotnet add package Microsoft.Data.SqlClient

RUN dotnet clean ${BUILD_ROOT}/$PROJECT_FILE

# restaurando dependencias
RUN dotnet restore ${BUILD_ROOT}/$PROJECT_FILE

# compilando
RUN dotnet build ${BUILD_ROOT}/$PROJECT_FILE -c Release -o /app/build

# publicando
RUN dotnet publish ${BUILD_ROOT}/$PROJECT_FILE -c Release -o /app/publish

# etapa: ejecucion
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS runtime

# directorio de trabajo del contenedor
WORKDIR /app

# copiando los archivos a publicar
COPY --from=build /app/publish .

# exponiendo el puerto 8080 para acceder - activar el public en forwader port
EXPOSE 8080

# punto de entrada de la aplicacion

ENTRYPOINT ["dotnet", "Ejemplo_01_CRUD_MVC_Simple.dll"]

#ARG NOMBRE_DLL=$PROJECT_NAME".DLL"
#ENV NOMBRE_DLL=$NOMBRE_DLL
#ENTRYPOINT ["sh", "-c", "dotnet $NOMBRE_DLL"]