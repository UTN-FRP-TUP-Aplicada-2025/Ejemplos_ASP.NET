@page "/admin/datos"
@layout AdminLayout

@attribute [Authorize]

@rendermode InteractiveServer
@attribute [StreamRendering]

@using Ejemplo_05_0_Integracion.Components.Layout
@using Ejemplo_05_0_Integracion.Utils
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization

<h3>Datos</h3>

<p>@cuit</p>

es equivalente 

<AuthorizeView>
    <NotAuthorized>
        <p>nada</p>
    </NotAuthorized>

    <Authorized>
        <p>Bienvenido, @context.User.Identity?.Name!</p>
        <p>CUIT: @context.User.FindFirst("CUIT")?.Value</p>
    </Authorized>
</AuthorizeView>

<button @onclick="OnSetCookieClick">Set cookie</button>

<button @onclick="OnGetCookieClick">Get cookie</button>

<p>@valor</p>

@* @code {

    [Inject] IJSRuntime JS { get; set; }

    private IJSObjectReference? _module;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            _module = await JS.InvokeAsync<IJSObjectReference>("import", "/admin/assets/js/main.js");
            await _module.InvokeVoidAsync("initTemplate");
        }
    }

    public async ValueTask DisposeAsync()
    {
        if (_module is not null)
        {
            await _module.DisposeAsync();
        }
    }
}
 *@

@code {
    [Inject] IJSRuntime JS { get; set; }

    private IJSObjectReference? _module;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //if (firstRender)

        if (_module == null)
        {
            _module = await JS.InvokeAsync<IJSObjectReference>("import", "/admin/assets/js/main.js");
        }
        await _module.InvokeVoidAsync("initTemplate");
    }

    public async ValueTask DisposeAsync()
    {
        if (_module is not null)
        {
            await _module.DisposeAsync();
        }
    }
}