@page "/personas_model_3"

@using Ejemplo_02_0_CRUD_RestAPI_y_Web_Simple.Components.Layout
@using Ejemplo_02_0_CRUD_RestAPI_y_Web_Simple.Models
@using Ejemplo_02_0_CRUD_RestAPI_y_Web_Simple.Services

@inject NavigationManager NavManager

@attribute [StreamRendering]

@rendermode InteractiveServer

<h1>Gestión de Personas</h1>

@if (mostrandoFormulario)
{
    <h2>@(editando ? "Editar Persona" : "Nueva Persona")</h2>

    <EditForm Model="personaModel" OnValidSubmit="GuardarPersona">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label>DNI:</label>
            <InputNumber class="form-control" @bind-Value="personaModel!.DNI" />
        </div>

        <div class="mb-3">
            <label>Nombre:</label>
            <InputText class="form-control" @bind-Value="personaModel!.Nombre" />
        </div>

        <div class="mb-3">
            <label>Fecha de Nacimiento:</label>
            <InputDate class="form-control" @bind-Value="personaModel!.FechaNacimiento" />
        </div>

        <button class="btn btn-primary" type="submit">Guardar</button>
        <button class="btn btn-secondary" type="button" @onclick="CancelarEdicion">Cancelar</button>
    </EditForm>
}
else
{
    <button class="btn btn-success" @onclick="NuevaPersona">Agregar Nueva Persona</button>

    @if (personas == null)
    {
        <p><em>Cargando...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>DNI</th>
                    <th>Nombre</th>
                    <th>Fecha Nacimiento</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in personas)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.DNI</td>
                        <td>@item.Nombre</td>
                        <td>@item.FechaNacimiento?.ToShortDateString()</td>
                        <td>
                            <button class="btn btn-warning" @onclick="() => Editar(item.Id)"><i class="fa-solid fa-pen"></i></button>
                            <button class="btn btn-info" @onclick="() => VerDetalles(item.Id)"><i class="fa-solid fa-expand"></i></button>
                            <button class="btn btn-danger" @onclick="() => Eliminar(item.Id)"><i class="fa-solid fa-trash"></i></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    @if (personaSeleccionada != null)
    {
        <h2>Detalles de la Persona</h2>
        <dl class="row">
            <dt class="col-sm-2">Id</dt>
            <dd class="col-sm-10">@personaSeleccionada.Id</dd>
            <dt class="col-sm-2">DNI</dt>
            <dd class="col-sm-10">@personaSeleccionada.DNI</dd>
            <dt class="col-sm-2">Nombre</dt>
            <dd class="col-sm-10">@personaSeleccionada.Nombre</dd>
            <dt class="col-sm-2">Fecha Nacimiento</dt>
            <dd class="col-sm-10">@personaSeleccionada.FechaNacimiento?.ToShortDateString()</dd>
        </dl>
        <button class="btn btn-secondary" @onclick="CerrarDetalles">Cerrar</button>
    }
}

@code {
    private PersonaModel personaModel { get; set; } = new();
    private PersonaModel? personaSeleccionada;
    private List<PersonaModel> personas { get; set; } = new();
    private PersonasService _service = new();
    private bool editando = false;
    private bool mostrandoFormulario = false;

    protected override void OnInitialized()
    {
        CargarPersonas();
    }

    private void CargarPersonas()
    {
        personas = _service.GetAll();
    }

    private void NuevaPersona()
    {
        personaModel = new PersonaModel();
        editando = false;
        mostrandoFormulario = true;
    }

    private void Editar(int id)
    {
        personaModel = _service.GetById(id);
        editando = true;
        mostrandoFormulario = true;
    }

    private void GuardarPersona()
    {
        if (editando)
        {
            _service.Actualizar(personaModel);
        }
        else
        {
            personaModel.FechaNacimiento = DateTime.Now;
            _service.CrearNuevo(personaModel);
        }

        CargarPersonas();
        mostrandoFormulario = false;
    }

    private void Eliminar(int id)
    {
        _service.Eliminar(id);
        CargarPersonas();
    }

    private void VerDetalles(int id)
    {
        personaSeleccionada = _service.GetById(id);
    }

    private void CerrarDetalles()
    {
        personaSeleccionada = null;
    }

    private void CancelarEdicion()
    {
        mostrandoFormulario = false;
    }
}
